
<html >

<meta charset="utf-8">
<head>

     <% include ./partials/head.ejs %>
</head>



<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>


var  url=    "https://agripronode.herokuapp.com/api/webGetSensorData";
//var reqData="farmid="+<%=fid%> +"&siteid="+<%=sid%>+"&sensor=sm&startdate=";
var requestData="farmid="+<%=fid%> +"&siteid="+<%=sid%>+"&sensor=sm&startdate=2018-01-01&enddate=2018-05-05";
 //root = JSON.parse(jdata), //***EDIT*** jdata is not a string as required by JSON.parse //it's already well formed so just use it 
      var data =  ajaxRequest(url, requestData);
        //var data=JSON.parse(rdata);
        
       
        margin = {
            top: 20,
            right: 20,
            bottom: 70,
            left: 40
        };
        width = 600 - margin.left - margin.right;
        height = 300 - margin.top - margin.bottom; // Parse the date / time //***a better comment would be "for parsing the date and time"... 
        parseDate = d3.time.format("%Y-%m").parse;
        x = d3.scale.ordinal().rangeRoundBands([0,
            width
        ], .05);
        y = d3.scale.linear().range([height, 0]);
        xAxis = d3.svg.axis().scale(x).orient("bottom").tickFormat(d3.time.format("%Y-%m"));
        yAxis = d3.svg.axis().scale(y).orient("left").ticks(10);
        svg = d3.select("body").append("svg") //***EDIT***
        //the data method returns the enter collection and your not ready for it yet... //
        .data(data).attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left +
            "," + margin.top + ")"); //d3.json //d3.csv("bar-data.csv", function(error, data) { //d3.selectAll('g').data(function(data){ 
    data.forEach(function(d) {
        //NOW is parsing the date and time 
        d.date = parseDate(d.date);
        d.value = +d.value;
    });
    x.domain(data.map(function(d) {
        return d.date;
    }));
    y.domain([0, d3.max(data, function(d) {
        return d.value;
    })]);
    svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis).selectAll("text").style("text-anchor", "end").attr("dx", "-.8em")
        .attr("dy", "-.55em").attr("transform", "rotate(-90)");
    svg.append("g").attr("class", "y axis").call(yAxis).append("text").attr("transform", "rotate(-90)").attr("y", 6).attr("dy", ".71em").style("text-anchor", "end").text("Value ($)");
    svg.selectAll("bar")
        .data(data).enter().append("rect").style("fill", "steelblue").attr("x", function(d) {
            return x(d.date);
        }).attr("width", x.rangeBand()).attr("y", function(d) {
            return y(d.value);
        }).attr("height", function(d) {
            return height - y(d.value);
        });
  


        function ajaxRequest(url, data){
    var xhttp = new XMLHttpRequest();
    ///////////////////////////////////////////MIN value set            
    //Sets the SM's min value
                xhttp.open("POST", url, true);
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        console.log("ajax request success: "+this.responseText);
                        return this.responseText;
                    }
                    else{
                        console.log("error in output: " + this.responseText);
                    }
                };
        
                xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    
                xhttp.send(data);

}
</script>
<style>

.axis {
    font: 10px sans-serif;
}

.axis path,
.axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
}

</style> 
</body>

</html>
<!--


  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <div id="chart_div"></div>
<script> 
var urlGetSensorData="http://agripronode.herokuapp.com/ap";

google.charts.load('current', {packages: ['corechart', 'line']});
google.charts.setOnLoadCallback(drawAxisTickColors);

function AjaxGetSensorData(){


}

function drawAxisTickColors() {
      var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Dogs');
      data.addColumn('number', 'Cats');

      data.addRows([
        [0, 0, 0],    [1, 10, 5],   [2, 23, 15],  [3, 17, 9],   [4, 18, 10],  [5, 9, 5],
        [6, 11, 3],   [7, 27, 19],  [8, 33, 25],  [9, 40, 32],  [10, 32, 24], [11, 35, 27],
        [12, 30, 22], [13, 40, 32], [14, 42, 34], [15, 47, 39], [16, 44, 36], [17, 48, 40],
        [18, 52, 44], [19, 54, 46], [20, 42, 34], [21, 55, 47], [22, 56, 48], [23, 57, 49],
        [24, 60, 52], [25, 50, 42], [26, 52, 44], [27, 51, 43], [28, 49, 41], [29, 53, 45],
        [30, 55, 47], [31, 60, 52], [32, 61, 53], [33, 59, 51], [34, 62, 54], [35, 65, 57],
        [36, 62, 54], [37, 58, 50], [38, 55, 47], [39, 61, 53], [40, 64, 56], [41, 65, 57],
        [42, 63, 55], [43, 66, 58], [44, 67, 59], [45, 69, 61], [46, 69, 61], [47, 70, 62],
        [48, 72, 64], [49, 68, 60], [50, 66, 58], [51, 65, 57], [52, 67, 59], [53, 70, 62],
        [54, 71, 63], [55, 72, 64], [56, 73, 65], [57, 75, 67], [58, 70, 62], [59, 68, 60],
        [60, 64, 56], [61, 60, 52], [62, 65, 57], [63, 67, 59], [64, 68, 60], [65, 69, 61],
        [66, 70, 62], [67, 72, 64], [68, 75, 67], [69, 80, 72]
      ]);

      var options = {
        hAxis: {
          title: 'Time',
          textStyle: {
            color: '#01579b',
            fontSize: 20,
            fontName: 'Arial',
            bold: true,
            italic: true
          },
          titleTextStyle: {
            color: '#01579b',
            fontSize: 16,
            fontName: 'Arial',
            bold: false,
            italic: true
          }
        },
        vAxis: {
          title: 'Popularity',
          textStyle: {
            color: '#1a237e',
            fontSize: 24,
            bold: true
          },
          titleTextStyle: {
            color: '#1a237e',
            fontSize: 24,
            bold: true
          }
        },
        colors: ['#a52714', '#097138']
      };
      var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
      chart.draw(data, options);
    }
    </script>
-->