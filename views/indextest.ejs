<!DOCTYPE html>
<html lang="en">

<head>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
 <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
 <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
 <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
  <style>
  #area-chart,
#line-chart,
#bar-chart,
#stacked,
#pie-chart{
  min-height: 250px;,
  max-height:250px;
}
  </style>
</head>

<body>

 


<div class"row">

    <div class="col-sm-6 text-center">
    Temperature
      <label class="label label-success">Area Chart</label>
      <div id="area-chart-temp" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Line Chart</label>
      <div id="line-chart-temp"></div>
    </div>
    <div  class="col-sm-6 text-center">
       <label class="label label-success">Bar Chart</label>
      <div id="bar-chart-temp" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Bar stacked</label>
      <div id="stacked-temp" ></div>
    </div>
   
    
  </div>



<div class"row">
    <div class="col-sm-6 text-center">
    Soil Moisture
      <label class="label label-success">Area Chart</label>
      <div id="area-chart-sm" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Line Chart</label>
      <div id="line-chart-sm"></div>
    </div>
    <div  class="col-sm-6 text-center">
       <label class="label label-success">Bar Chart</label>
      <div id="bar-chart-sm" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Bar stacked</label>
      <div id="stacked-sm" ></div>
    </div>
   
    
  </div>

  

<div class"row">
    <div class="col-sm-6 text-center">
      <label class="label label-success">Area Chart</label>
      <div id="area-chart-hum" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Line Chart</label>
      <div id="line-chart-hum"></div>
    </div>
    <div  class="col-sm-6 text-center">
       <label class="label label-success">Bar Chart</label>
      <div id="bar-chart-hum" ></div>
    </div>
    <div class="col-sm-6 text-center">
       <label class="label label-success">Bar stacked</label>
      <div id="stacked-hum" ></div>
    </div>
   
    
  </div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

  <script>
    $('.message a').click(function () {
      $('form').animate({ height: "toggle", opacity: "toggle" }, "slow");
    });
//---------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------

            var xAxis = [];
            var yAxis = [];

            GetChartData('sm');
            GetChartData('hum');
            GetChartData('temp');

            function GetChartData(SENSOR) {

                var url = "https://agripronode.herokuapp.com/api/webGetSensorData";
                //var reqData="farmid="+<%=fid%> +"&siteid="+<%=sid%>+"&sensor=sm&startdate=";
              console.log(SENSOR);
                var data = "farmid=" +<%=fid%> +"&siteid=" +<%=sid %> +"&sensor="+SENSOR+"&startdate=2018-04-25&enddate=2018-06-07";




                var xhttp = new XMLHttpRequest();
                ///////////////////////////////////////////MIN value set            
                //Sets the SM's min value
                xhttp.open("POST", url, true);
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        if (this.responseText) {
                            var recievedData = JSON.parse(this.responseText);
                            console.log(this.responseText);
                          
if(SENSOR==='sm'){
  drawSM(recievedData.sensordata);
}
else if(SENSOR==='hum')
{
  drawHUM(recievedData.sensordata);
}    else{
      
 drawTEMP(recievedData.sensordata);
}                    
                        
                          // drawTEMP(recievedData.sensordata);
                          // console.log("Trace 1: "+ trace1)
                        }

                    }
                    else {
                        //      
                    }
                };

                xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

                xhttp.send(data);
            }



function drawSM(sensorData){


var data = sensorData,
    config = {
      data: data,
      xkey: 'date',
      ykeys: ['value'],
      labels: ['Value'],
      fillOpacity: 0.6,
      hideHover: 'auto',
      behaveLikeLine: false,
      resize: true,
      pointFillColors:['#ffffff'],
      pointStrokeColors: ['black'],
      lineColors:['blue','red']
  };
config.element = 'area-chart-sm';
Morris.Area(config);
config.element = 'line-chart-sm';
Morris.Line(config);
config.element = 'bar-chart-sm';
Morris.Bar(config);

}


function drawHUM(sensorData){


var data = sensorData,
    config = {
      data: data,
      xkey: 'date',
      ykeys: ['value'],
      labels: ['Value'],
      fillOpacity: 0.6,
      hideHover: 'auto',
      behaveLikeLine: false,
      resize: true,
      pointFillColors:['#ffffff'],
      pointStrokeColors: ['black'],
      lineColors:['cyan','red']
  };
config.element = 'area-chart-hum';
Morris.Area(config);
config.element = 'line-chart-hum';
Morris.Line(config);
config.element = 'bar-chart-hum';
Morris.Bar(config);

}

function drawTEMP(sensorData){


var data = sensorData,
    config = {
      data: data,
      xkey: 'date',
      ykeys: ['value'],
      labels: ['Value'],
      fillOpacity: 0.6,
      hideHover: 'auto',
      behaveLikeLine: false,
      resize: true,
      pointFillColors:['#ffffff'],
      pointStrokeColors: ['black'],
      lineColors:['red','green']
  };
config.element = 'area-chart-temp';
Morris.Area(config);
config.element = 'line-chart-temp';
Morris.Line(config);
config.element = 'bar-chart-temp';
Morris.Bar(config);

}

  </script>
  <footer>
    <% include ./partials/footer %>
  </footer>
</body>

</html>